available: true
callbacks: "const type{\n    accept_cargo_types cargodict\n    prod_cargo_types cargodict\n\
  }\n\nlocal type{\n    current_production_ratio integer\n    total_cargo_produced_this_cycle\
  \ integer\n    total_cargo_to_distribute_this_cycle integer\n\n    cargo iterator\n\
  }\n\nindustry:storage type{\n    supplied_cycles_remaining_cargo cargodict\n\n \
  \   total_produced_cargo_available integer\n}\n\naccept_cargo_types ctt:SAND []\
  \ 6 =\naccept_cargo_types ctt:SASH [] 2 =\nprod_cargo_types ctt:GLAS [] 8 =\n\n\n\
  /*\n The following is a replication of what FIRS is doing for a secondary industry.\n\
  \ See: https://github.com/andythenorth/firs/blob/4.4.0/src/templates/produce_secondary.pynml\n\
  */\n\ncb:production_cargo_arrival def{\n    cargo accept_cargo_types loop{\n   \
  \     supplied_cycles_remaining_cargo cargo []\n            28\n            supplied_cycles_remaining_cargo\
  \ cargo []\n        industry:cargo_incoming_waiting cargo [] 0 >\n        =\n\n\
  \        current_production_ratio\n            current_production_ratio\n      \
  \          accept_cargo_types cargo []\n                0\n            supplied_cycles_remaining_cargo\
  \ cargo [] 0 >\n            +\n        =\n\n        total_cargo_produced_this_cycle\n\
  \            total_cargo_produced_this_cycle\n            industry:cargo_incoming_waiting\
  \ cargo [] current_production_ratio * 8 /\n            +\n        =\n    }\n\n \
  \   /*\n     When low cargo amounts are delivered, it's possible that final output\n\
  \     cargo amounts < 1, which means no cargo is distributed. Prevent that by\n\
  \     stockpiling produced cargo on each production cycle until there is enough\n\
  \     to distribute. The case is triggered by low amounts being moved to the\n \
  \    produce cycle as a vehicle gradually unloads, and was noticeable with\n   \
  \  Road Hog trams.\n    */\n    total_produced_cargo_available total_produced_cargo_available\
  \ total_cargo_produced_this_cycle + =\n\n    /*\n     Then check min. distributed\
  \ by dividing over 8, to get the amount divided\n     by max possible output cargos.\
  \ 8 is the pathological case, this could be\n     made more accurate by checking\
  \ the lowest output ratio in current economy.\n     For accuracy, this could also\
  \ store remainders using mod(8) or so, but eh, TMWFTLB?\n    */\n    total_cargo_to_distribute_this_cycle\n\
  \        total_produced_cargo_available\n        0\n        total_produced_cargo_available\
  \ 8 >=\n    =\n    total_produced_cargo_available total_produced_cargo_available\
  \ total_cargo_to_distribute_this_cycle - =\n\n    cargo accept_cargo_types loop{\n\
  \        result:inputs cargo [] industry:cargo_incoming_waiting cargo [] =\n   \
  \ }\n    cargo prod_cargo_types loop{\n        result:outputs cargo [] total_cargo_to_distribute_this_cycle\
  \ prod_cargo_types cargo [] * 8 / =\n    }\n}\n\ncb:production_every_256_ticks def{\n\
  \    cargo accept_cargo_types loop{\n        supplied_cycles_remaining_cargo cargo\
  \ [] supplied_cycles_remaining_cargo cargo [] 1 - 0 max =\n    }\n}\n\ncb:production_change_monthly\
  \ def{\n    result:value 0 =\n}\n\ncb:production_change_random def{\n    result:value\
  \ 0 =\n}\n"
cargoAcceptance:
- SAND
- SASH
cargoProduction:
- GLAS
colour: 151
fundCostMultiplier: 95
id: 16
layout:
- - - 3
    - 0
    - 3
    - 0
  - - 2
    - 1
    - 2
    - 1
  - - 3
    - 0
    - 3
    - 0
  - - 2
    - 1
    - 2
    - 1
- - - 3
    - 0
    - 3
    - 0
  - - 2
    - 1
    - 2
    - 1
  - - -1
    - 3
    - 0
    - -1
  - - -1
    - 2
    - 1
    - -1
- - - 3
    - 0
    - -1
    - -1
  - - 2
    - 1
    - 3
    - 0
  - - 3
    - 0
    - 2
    - 1
  - - 2
    - 1
    - -1
    - -1
name: Glass Works
placement: anywhere
probabilityInGame: 1
probabilityMapGen: 5
prospectChance: 0
tiles:
- sprites:
  - alwaysDraw: true
    drawType: recolour
    sprite:
      filename: industries/glass-works/2.png
      left: -31
      top: 0
  - alwaysDraw: false
    drawType: recolour
    sprite:
      filename: industries/glass-works/1.png
      left: -31
      top: -59
- sprites:
  - alwaysDraw: true
    drawType: recolour
    sprite:
      filename: industries/glass-works/4.png
      left: -31
      top: 0
  - alwaysDraw: false
    drawType: recolour
    sprite:
      filename: industries/glass-works/3.png
      left: -31
      top: -71
- sprites:
  - alwaysDraw: true
    drawType: recolour
    sprite:
      filename: industries/glass-works/6.png
      left: -31
      top: 0
  - alwaysDraw: false
    drawType: recolour
    sprite:
      filename: industries/glass-works/5.png
      left: -31
      top: -59
- sprites:
  - alwaysDraw: true
    drawType: recolour
    sprite:
      filename: industries/glass-works/8.png
      left: -31
      top: 0
  - alwaysDraw: false
    drawType: recolour
    sprite:
      filename: industries/glass-works/7.png
      left: -31
      top: 0
type: secondary
